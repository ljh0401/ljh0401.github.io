"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/remark-html";
exports.ids = ["vendor-chunks/remark-html"];
exports.modules = {

/***/ "(rsc)/./node_modules/remark-html/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/remark-html/lib/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ remarkHtml)\n/* harmony export */ });\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-sanitize */ \"(rsc)/./node_modules/hast-util-sanitize/lib/index.js\");\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"(rsc)/./node_modules/mdast-util-to-hast/lib/index.js\");\n/* harmony import */ var hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-to-html */ \"(rsc)/./node_modules/hast-util-to-html/lib/index.js\");\n/**\n * @typedef {import('hast-util-sanitize').Schema} Schema\n * @typedef {import('hast-util-to-html').Options} ToHtmlOptions\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-to-hast').Handlers} Handlers\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n * @typedef {import('unified').Processor<undefined, undefined, undefined, Root, string>} Processor\n */ /**\n * @typedef ExtraOptionsFields\n *   Extra fields.\n * @property {Readonly<Handlers> | null | undefined} [handlers]\n *   How to turn mdast nodes into hast nodes (optional);\n *   passed to `mdast-util-to-hast`.\n * @property {Readonly<Schema> | boolean | null | undefined} [sanitize]\n *   Sanitize the output, and how (default: `true`).\n *\n * @typedef {ToHtmlOptions & ExtraOptionsFields} Options\n *   Configuration.\n */ \n\n\n/** @type {Readonly<Options>} */ const emptyOptions = {};\n/**\n * Serialize markdown as HTML.\n *\n * ###### Notes\n *\n * Passing `sanitize: false` is dangerous.\n * It allows arbitrary HTML and does not sanitize elements.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */ function remarkHtml(options) {\n    /** @type {Processor} */ // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n    // eslint-disable-next-line unicorn/no-this-assignment\n    const self = this;\n    const { handlers, sanitize: clean, ...toHtmlOptions } = options || emptyOptions;\n    let allowDangerousHtml = false;\n    /** @type {Readonly<Schema> | undefined} */ let schema;\n    if (typeof clean === \"boolean\") {\n        allowDangerousHtml = !clean;\n    } else if (clean) {\n        schema = clean;\n    }\n    self.compiler = compiler;\n    /**\n   * @type {Compiler}\n   */ function compiler(tree, file) {\n        const hast = (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(tree, {\n            handlers,\n            allowDangerousHtml\n        });\n        const safeHast = allowDangerousHtml ? hast : (0,hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__.sanitize)(hast, schema);\n        const result = (0,hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__.toHtml)(safeHast, {\n            ...toHtmlOptions,\n            allowDangerousHtml\n        });\n        if (file.extname) {\n            file.extname = \".html\";\n        }\n        // Add an eof eol.\n        return tree && tree.type === \"root\" && result && /[^\\r\\n]/.test(result.charAt(result.length - 1)) ? result + \"\\n\" : result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVtYXJrLWh0bWwvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7OztDQU9DLEdBRUQ7Ozs7Ozs7Ozs7O0NBV0MsR0FFMEM7QUFDRjtBQUNEO0FBRXhDLDhCQUE4QixHQUM5QixNQUFNRyxlQUFlLENBQUM7QUFFdEI7Ozs7Ozs7Ozs7OztDQVlDLEdBQ2MsU0FBU0MsV0FBV0MsT0FBTztJQUN4QyxzQkFBc0IsR0FDdEIsb0ZBQW9GO0lBQ3BGLHNEQUFzRDtJQUN0RCxNQUFNQyxPQUFPLElBQUk7SUFDakIsTUFBTSxFQUFDQyxRQUFRLEVBQUVQLFVBQVVRLEtBQUssRUFBRSxHQUFHQyxlQUFjLEdBQUdKLFdBQVdGO0lBQ2pFLElBQUlPLHFCQUFxQjtJQUN6Qix5Q0FBeUMsR0FDekMsSUFBSUM7SUFFSixJQUFJLE9BQU9ILFVBQVUsV0FBVztRQUM5QkUscUJBQXFCLENBQUNGO0lBQ3hCLE9BQU8sSUFBSUEsT0FBTztRQUNoQkcsU0FBU0g7SUFDWDtJQUVBRixLQUFLTSxRQUFRLEdBQUdBO0lBRWhCOztHQUVDLEdBQ0QsU0FBU0EsU0FBU0MsSUFBSSxFQUFFQyxJQUFJO1FBQzFCLE1BQU1DLE9BQU9kLDBEQUFNQSxDQUFDWSxNQUFNO1lBQUNOO1lBQVVHO1FBQWtCO1FBQ3ZELE1BQU1NLFdBQVdOLHFCQUFxQkssT0FBT2YsNERBQVFBLENBQUNlLE1BQU1KO1FBQzVELE1BQU1NLFNBQVNmLHlEQUFNQSxDQUFDYyxVQUFVO1lBQUMsR0FBR1AsYUFBYTtZQUFFQztRQUFrQjtRQUVyRSxJQUFJSSxLQUFLSSxPQUFPLEVBQUU7WUFDaEJKLEtBQUtJLE9BQU8sR0FBRztRQUNqQjtRQUVBLGtCQUFrQjtRQUNsQixPQUFPTCxRQUNMQSxLQUFLTSxJQUFJLEtBQUssVUFDZEYsVUFDQSxVQUFVRyxJQUFJLENBQUNILE9BQU9JLE1BQU0sQ0FBQ0osT0FBT0ssTUFBTSxHQUFHLE1BQzNDTCxTQUFTLE9BQ1RBO0lBQ047QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2xqaDA0MDEtYmxvZy8uL25vZGVfbW9kdWxlcy9yZW1hcmstaHRtbC9saWIvaW5kZXguanM/ZTYyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QtdXRpbC1zYW5pdGl6ZScpLlNjaGVtYX0gU2NoZW1hXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0LXV0aWwtdG8taHRtbCcpLk9wdGlvbnN9IFRvSHRtbE9wdGlvbnNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QtdXRpbC10by1oYXN0JykuSGFuZGxlcnN9IEhhbmRsZXJzXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlmaWVkJykuQ29tcGlsZXI8Um9vdCwgc3RyaW5nPn0gQ29tcGlsZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaWZpZWQnKS5Qcm9jZXNzb3I8dW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgUm9vdCwgc3RyaW5nPn0gUHJvY2Vzc29yXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiBFeHRyYU9wdGlvbnNGaWVsZHNcbiAqICAgRXh0cmEgZmllbGRzLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxIYW5kbGVycz4gfCBudWxsIHwgdW5kZWZpbmVkfSBbaGFuZGxlcnNdXG4gKiAgIEhvdyB0byB0dXJuIG1kYXN0IG5vZGVzIGludG8gaGFzdCBub2RlcyAob3B0aW9uYWwpO1xuICogICBwYXNzZWQgdG8gYG1kYXN0LXV0aWwtdG8taGFzdGAuXG4gKiBAcHJvcGVydHkge1JlYWRvbmx5PFNjaGVtYT4gfCBib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3Nhbml0aXplXVxuICogICBTYW5pdGl6ZSB0aGUgb3V0cHV0LCBhbmQgaG93IChkZWZhdWx0OiBgdHJ1ZWApLlxuICpcbiAqIEB0eXBlZGVmIHtUb0h0bWxPcHRpb25zICYgRXh0cmFPcHRpb25zRmllbGRzfSBPcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKi9cblxuaW1wb3J0IHtzYW5pdGl6ZX0gZnJvbSAnaGFzdC11dGlsLXNhbml0aXplJ1xuaW1wb3J0IHt0b0hhc3R9IGZyb20gJ21kYXN0LXV0aWwtdG8taGFzdCdcbmltcG9ydCB7dG9IdG1sfSBmcm9tICdoYXN0LXV0aWwtdG8taHRtbCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxPcHRpb25zPn0gKi9cbmNvbnN0IGVtcHR5T3B0aW9ucyA9IHt9XG5cbi8qKlxuICogU2VyaWFsaXplIG1hcmtkb3duIGFzIEhUTUwuXG4gKlxuICogIyMjIyMjIE5vdGVzXG4gKlxuICogUGFzc2luZyBgc2FuaXRpemU6IGZhbHNlYCBpcyBkYW5nZXJvdXMuXG4gKiBJdCBhbGxvd3MgYXJiaXRyYXJ5IEhUTUwgYW5kIGRvZXMgbm90IHNhbml0aXplIGVsZW1lbnRzLlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8T3B0aW9ucz4gfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqICAgTm90aGluZy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVtYXJrSHRtbChvcHRpb25zKSB7XG4gIC8qKiBAdHlwZSB7UHJvY2Vzc29yfSAqL1xuICAvLyBAdHMtZXhwZWN0LWVycm9yOiBUUyBpbiBKU0RvYyBnZW5lcmF0ZXMgd3JvbmcgdHlwZXMgaWYgYHRoaXNgIGlzIHR5cGVkIHJlZ3VsYXJseS5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tdGhpcy1hc3NpZ25tZW50XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIGNvbnN0IHtoYW5kbGVycywgc2FuaXRpemU6IGNsZWFuLCAuLi50b0h0bWxPcHRpb25zfSA9IG9wdGlvbnMgfHwgZW1wdHlPcHRpb25zXG4gIGxldCBhbGxvd0Rhbmdlcm91c0h0bWwgPSBmYWxzZVxuICAvKiogQHR5cGUge1JlYWRvbmx5PFNjaGVtYT4gfCB1bmRlZmluZWR9ICovXG4gIGxldCBzY2hlbWFcblxuICBpZiAodHlwZW9mIGNsZWFuID09PSAnYm9vbGVhbicpIHtcbiAgICBhbGxvd0Rhbmdlcm91c0h0bWwgPSAhY2xlYW5cbiAgfSBlbHNlIGlmIChjbGVhbikge1xuICAgIHNjaGVtYSA9IGNsZWFuXG4gIH1cblxuICBzZWxmLmNvbXBpbGVyID0gY29tcGlsZXJcblxuICAvKipcbiAgICogQHR5cGUge0NvbXBpbGVyfVxuICAgKi9cbiAgZnVuY3Rpb24gY29tcGlsZXIodHJlZSwgZmlsZSkge1xuICAgIGNvbnN0IGhhc3QgPSB0b0hhc3QodHJlZSwge2hhbmRsZXJzLCBhbGxvd0Rhbmdlcm91c0h0bWx9KVxuICAgIGNvbnN0IHNhZmVIYXN0ID0gYWxsb3dEYW5nZXJvdXNIdG1sID8gaGFzdCA6IHNhbml0aXplKGhhc3QsIHNjaGVtYSlcbiAgICBjb25zdCByZXN1bHQgPSB0b0h0bWwoc2FmZUhhc3QsIHsuLi50b0h0bWxPcHRpb25zLCBhbGxvd0Rhbmdlcm91c0h0bWx9KVxuXG4gICAgaWYgKGZpbGUuZXh0bmFtZSkge1xuICAgICAgZmlsZS5leHRuYW1lID0gJy5odG1sJ1xuICAgIH1cblxuICAgIC8vIEFkZCBhbiBlb2YgZW9sLlxuICAgIHJldHVybiB0cmVlICYmXG4gICAgICB0cmVlLnR5cGUgPT09ICdyb290JyAmJlxuICAgICAgcmVzdWx0ICYmXG4gICAgICAvW15cXHJcXG5dLy50ZXN0KHJlc3VsdC5jaGFyQXQocmVzdWx0Lmxlbmd0aCAtIDEpKVxuICAgICAgPyByZXN1bHQgKyAnXFxuJ1xuICAgICAgOiByZXN1bHRcbiAgfVxufVxuIl0sIm5hbWVzIjpbInNhbml0aXplIiwidG9IYXN0IiwidG9IdG1sIiwiZW1wdHlPcHRpb25zIiwicmVtYXJrSHRtbCIsIm9wdGlvbnMiLCJzZWxmIiwiaGFuZGxlcnMiLCJjbGVhbiIsInRvSHRtbE9wdGlvbnMiLCJhbGxvd0Rhbmdlcm91c0h0bWwiLCJzY2hlbWEiLCJjb21waWxlciIsInRyZWUiLCJmaWxlIiwiaGFzdCIsInNhZmVIYXN0IiwicmVzdWx0IiwiZXh0bmFtZSIsInR5cGUiLCJ0ZXN0IiwiY2hhckF0IiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/remark-html/lib/index.js\n");

/***/ })

};
;